var InlineAds = function(args) {

	this.container = args.container;
	this.mpu_ads = args.mpu_ads;
	this.ad_text = args.ad_text;
	this.extraHeight = args.extraHeight;
	this.site_targeting = args.site_targeting;
	this.lazyload_unit = args.lazyload_unit;

	// Word count for short articles
	shortArticle = 300;

	//console.log(jQuery( window ).height());

	var inlineRules = { 
        bodySelector: '#article > article',
        slotSelector: ' > p',
        minBelow: 650, // minimum pixels below an ad before placing another one
    };

	// Generate a lazyloaded ad
	this.lazyloadAd = function(dfp_id, ad_number) {
		if((ad_number - 1) < 10) {
			ad_position = ad_number - 1;
		} else {
			ad_position = 10;
		}
		var ad_html = ' \
			<div id="mobile-mpu-' + ad_number + '-wrapper" class="mpu"> \
				<span class="ad-break-text"><i class="icon-angle-down"></i> ' + this.ad_text + ' <i class="icon-angle-down"></i></span> \
				<div id="mobile-mpu-' + ad_number + '" class="mobile-mpu-wrapper"> \
					<div \
						class="lazyload" \
						data-dfp-id="' + dfp_id + '" \
						data-dfp-sizes="320x50, 320x100, 300x250" \
						data-dfp-targeting="site=' + this.site_targeting + '&position=' + this.site_targeting + '-' + ad_position + '&lazyload=true&sticky=false" \
						id="div-ga-' + dfp_id + '_' + ad_number + '" \
					></div> \
				</div> \
			</div>';

		return ad_html;
	}

	this.moveAds = function(ads)
	{

		// Get article height plus anything passed into the plug-in, like iframe heights
		articleHeight = this.extraHeight;

		jQuery('article > main').each(function() {
			sectionDims = this.getBoundingClientRect();
			articleHeight = articleHeight + sectionDims.height;
		});

		if ( this.container.find('main').length > 0 ) {
			var articleContents = [];
			jQuery(this.container.find('main > *:not(main)')).each(function() {
				articleContents.push(this);
			});
		} else {
			var articleContents = [];
			jQuery(this.container.find(' > *')).each(function() {
				articleContents.push(this);
			});
		}

		// Get article word count
		totalWordcount = 0;
		for ( var k = 0; k < articleContents.length; k++ ) {
			totalWordcount = totalWordcount + this.countWords(articleContents[k].innerHTML);
		}

		var bodyDims = this.container[0].getBoundingClientRect();

		var adCount = 0;
		wordCountCheck = shortArticle;
		adPlaced = false;
		
		// First check if this is a short article, if so we're only going to place MPU_MOB
		if(totalWordcount < shortArticle) {

			var wordCount = 0;
			wordCountCheck = totalWordcount / 2;

			// Count through words and put the ad halfway through
			for ( var j = 0; j < articleContents.length; j++ ) {

				if ( (wordCount < wordCountCheck) ) {
					wordCount = wordCount + this.countWords(articleContents[j].innerHTML);
				} else {
					if(!adPlaced){
						jQuery(articleContents[j]).before(ads[0]);
						adPlaced = true;
					}
				}
			}

		} else {

			// On longer articles we want to put MPU_MOB after the first para, then ads every viewport (600px or whatever is defined in minBelow)
			jQuery(articleContents[0]).after(ads[0]);
			articleContents.shift();
			// Don't include first ad in the count
			var adCount = 2;

			firstAdDims = ads[0].getBoundingClientRect();

			var adPlaced = false;
			secondElemDims = this.elemDims(articleContents[0]);
			var nextAdTarget = secondElemDims.top + inlineRules.minBelow;

			// Every time we place an ad we get the offset of the element below, then look for the next element that is a certain distance away (defined by minBelow)
			for ( var j = 0; j < articleContents.length; j++ ) {

				elemDims = this.elemDims(articleContents[j]);

				if(elemDims.top >= nextAdTarget) {
					dfp_id = this.lazyload_unit;
					jQuery(articleContents[j]).before(this.lazyloadAd(dfp_id, adCount));
					adPlaced = true;
					thisAdDims = jQuery('#mobile-mpu-' + adCount)[0].getBoundingClientRect();
					if(articleContents[j + 1]) {
						nextElemDims = this.elemDims(articleContents[j + 1]);
						nextAdTarget = nextElemDims.top + inlineRules.minBelow;
					}
					adCount++;
				}

			}

		}

	};

	// Count Words In Paragraph
	this.countWords = function(paragraph) {
		paragraph = paragraph.replace(/(^\s*)|(\s*jQuery)/gi,"");
		paragraph = paragraph.replace(/[ ]{2,}/gi," ");
		paragraph = paragraph.replace(/\n /,"\n");
		return paragraph.split(' ').length;
	};

	this.elemDims = function(el) {
        return {
            top: el.offsetTop,
            bottom: el.offsetTop + el.offsetHeight,
            element: el
        };
    };

  	this.moveAds(this.mpu_ads);
	
};